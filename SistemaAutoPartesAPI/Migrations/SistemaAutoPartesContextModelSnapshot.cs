// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaAutoPartesAPI.Models;

#nullable disable

namespace SistemaAutoPartesAPI.Migrations
{
    [DbContext(typeof(SistemaAutoPartesContext))]
    partial class SistemaAutoPartesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RolPermiso", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("PermisoId")
                        .HasColumnType("integer");

                    b.HasKey("RolId", "PermisoId")
                        .HasName("PK__RolPermi__D04D0E8320092D2B");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolPermiso", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AsistenciaId"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("HoraEntrada")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly?>("HoraSalida")
                        .HasColumnType("time without time zone");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.HasKey("AsistenciaId")
                        .HasName("PK__Asistenc__72710FA5C055786A");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.AtributosProducto", b =>
                {
                    b.Property<int>("AtributoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AtributoId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoDato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("AtributoId")
                        .HasName("PK__Atributo__8AB1659A36881035");

                    b.HasIndex("CategoriaId");

                    b.ToTable("AtributosProducto", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Bitacora", b =>
                {
                    b.Property<int>("BitacoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BitacoraId"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Detalles")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("RegistroId")
                        .HasColumnType("integer");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("BitacoraId")
                        .HasName("PK__Bitacora__7ACF9B389483575F");

                    b.HasIndex("SucursalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Bitacora", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.CategoriasProducto", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<int?>("CategoriaPadreId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.HasKey("CategoriaId")
                        .HasName("PK__Categori__F353C1E55E088816");

                    b.HasIndex("CategoriaPadreId");

                    b.ToTable("CategoriasProducto", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Rfc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("RFC");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ClienteId")
                        .HasName("PK__Clientes__71ABD08705C1CFA9");

                    b.HasIndex("SucursalId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.DetalleVentum", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("VentaId")
                        .HasColumnType("integer");

                    b.HasKey("DetalleId")
                        .HasName("PK__DetalleV__6E19D6DA4AAA2BD0");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpleadoId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Curp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("CURP");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<DateOnly?>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Genero")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("NSS");

                    b.Property<string>("Rfc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("RFC");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("EmpleadoId")
                        .HasName("PK__Empleado__958BE9104CFAAEC0");

                    b.HasIndex("SucursalId");

                    b.HasIndex(new[] { "Email" }, "UQ__Empleado__A9D105343D1D831E")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Incidencia", b =>
                {
                    b.Property<int>("IncidenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IncidenciaId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<bool>("Justificada")
                        .HasColumnType("boolean");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IncidenciaId")
                        .HasName("PK__Incidenc__E41133E62CD1F187");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Inventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InventarioId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.HasKey("InventarioId")
                        .HasName("PK__Inventar__FB8A24D759835E82");

                    b.HasIndex("ProductoId");

                    b.HasIndex("SucursalId");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.InventarioVendedor", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "ProductoId", "SucursalId")
                        .HasName("PK__Inventar__E11259D0566D7644");

                    b.HasIndex("ProductoId");

                    b.HasIndex("SucursalId");

                    b.ToTable("InventarioVendedor", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.MovimientosInventario", b =>
                {
                    b.Property<int>("MovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovimientoId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp");

                    b.Property<string>("Notas")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Origen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int?>("ReferenciaId")
                        .HasColumnType("integer");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("MovimientoId")
                        .HasName("PK__Movimien__BF923C2CFA483A44");

                    b.HasIndex("ProductoId");

                    b.HasIndex("SucursalId");

                    b.ToTable("MovimientosInventario", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Nomina", b =>
                {
                    b.Property<int>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NominaId"));

                    b.Property<decimal>("Bonos")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Deducciones")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaPago")
                        .HasColumnType("date");

                    b.Property<decimal>("SueldoBase")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPagar")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("NominaId")
                        .HasName("PK__Nominas__33A37612A9B507AC");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Nominas");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PermisoId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Modulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PermisoId")
                        .HasName("PK__Permisos__96E0C723A940671A");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.PermisosSalidum", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PermisoId"));

                    b.Property<bool>("Autorizado")
                        .HasColumnType("boolean");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("HoraRegreso")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly?>("HoraSalida")
                        .HasColumnType("time without time zone");

                    b.Property<string>("Motivo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.HasKey("PermisoId")
                        .HasName("PK__Permisos__96E0C723DBBED833");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("PermisosSalida");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductoId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductoId")
                        .HasName("PK__Producto__A430AEA33A48C24C");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.ProductoAtributoValor", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<int>("AtributoId")
                        .HasColumnType("integer");

                    b.Property<string>("Valor")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.HasKey("ProductoId", "AtributoId")
                        .HasName("PK__Producto__1C9BB8FA79036D6B");

                    b.HasIndex("AtributoId");

                    b.ToTable("ProductoAtributoValor", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Role", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RolId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("RolId")
                        .HasName("PK__Roles__F92302F1D3BB479E");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Sucursale", b =>
                {
                    b.Property<int>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SucursalId"));

                    b.Property<string>("Ciudad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("SucursalId")
                        .HasName("PK__Sucursal__6CB482E1265D3819");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.UnidadesMovile", b =>
                {
                    b.Property<int>("UnidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UnidadId"));

                    b.Property<bool>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Placa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UnidadId")
                        .HasName("PK__Unidades__C6F324D653AB5928");

                    b.HasIndex("SucursalId");

                    b.ToTable("UnidadesMoviles");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.PrimitiveCollection<int[]>("RolId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE7B8177A4680");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex(new[] { "Username" }, "UQ__Usuarios__536C85E498F79612")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.UsuarioUnidad", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadId")
                        .HasColumnType("integer");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaAsignacion")
                        .HasColumnType("date");

                    b.HasKey("UsuarioId", "UnidadId", "SucursalId")
                        .HasName("PK__UsuarioU__B73E6177AAFFE446");

                    b.HasIndex("SucursalId");

                    b.HasIndex("UnidadId");

                    b.ToTable("UsuarioUnidad", (string)null);
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VentaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp");

                    b.Property<string>("FirmaUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("FormaPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<int>("SucursalId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UbicacionGeo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("VentaId")
                        .HasName("PK__Ventas__5B4150ACAEEDFE50");

                    b.HasIndex("ClienteId");

                    b.HasIndex("SucursalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "RolId")
                        .HasName("PK__UsuarioR__24AFD797AA3D2388");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("RolPermiso", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .IsRequired()
                        .HasConstraintName("FK_RolPermiso_Permiso");

                    b.HasOne("SistemaAutoPartesAPI.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK_RolPermiso_Rol");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Asistencia", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Empleado", "Empleado")
                        .WithMany("Asistencia")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Asistencias_Empleado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.AtributosProducto", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.CategoriasProducto", "Categoria")
                        .WithMany("AtributosProductos")
                        .HasForeignKey("CategoriaId")
                        .IsRequired()
                        .HasConstraintName("FK_AtributosProducto_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Bitacora", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("Bitacoras")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_Bitacora_Sucursal");

                    b.HasOne("SistemaAutoPartesAPI.Models.Usuario", "Usuario")
                        .WithMany("Bitacoras")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Bitacora_Usuario");

                    b.Navigation("Sucursal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.CategoriasProducto", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.CategoriasProducto", "CategoriaPadre")
                        .WithMany("InverseCategoriaPadre")
                        .HasForeignKey("CategoriaPadreId")
                        .HasConstraintName("FK_CategoriasProducto_Padre");

                    b.Navigation("CategoriaPadre");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Cliente", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("Clientes")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_Clientes_Sucursal");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.DetalleVentum", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Producto", "Producto")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleVenta_Producto");

                    b.HasOne("SistemaAutoPartesAPI.Models.Venta", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("VentaId")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleVenta_Venta");

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Empleado", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("Empleados")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_Sucursal");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Incidencia", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Empleado", "Empleado")
                        .WithMany("Incidencia")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Incidencias_Empleado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Inventario", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Producto", "Producto")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_Inventario_Producto");

                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("Inventarios")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_Inventario_Sucursal");

                    b.Navigation("Producto");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.InventarioVendedor", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Producto", "Producto")
                        .WithMany("InventarioVendedors")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioVendedor_Producto");

                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("InventarioVendedors")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioVendedor_Sucursal");

                    b.HasOne("SistemaAutoPartesAPI.Models.Usuario", "Usuario")
                        .WithMany("InventarioVendedors")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_InventarioVendedor_Usuario");

                    b.Navigation("Producto");

                    b.Navigation("Sucursal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.MovimientosInventario", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Producto", "Producto")
                        .WithMany("MovimientosInventarios")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_MovInv_Producto");

                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("MovimientosInventarios")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_MovInv_Sucursal");

                    b.Navigation("Producto");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Nomina", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Empleado", "Empleado")
                        .WithMany("Nominas")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Nominas_Empleado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.PermisosSalidum", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Empleado", "Empleado")
                        .WithMany("PermisosSalida")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired()
                        .HasConstraintName("FK_PermisosSalida_Empleado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Producto", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.CategoriasProducto", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .IsRequired()
                        .HasConstraintName("FK_Productos_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.ProductoAtributoValor", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.AtributosProducto", "Atributo")
                        .WithMany("ProductoAtributoValors")
                        .HasForeignKey("AtributoId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductoAtributoValor_Atributo");

                    b.HasOne("SistemaAutoPartesAPI.Models.Producto", "Producto")
                        .WithMany("ProductoAtributoValors")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductoAtributoValor_Producto");

                    b.Navigation("Atributo");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.UnidadesMovile", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("UnidadesMoviles")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_UnidadesMoviles_Sucursal");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Usuario", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Empleado", "Empleado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_Empleado");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.UsuarioUnidad", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("UsuarioUnidads")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioUnidad_Sucursal");

                    b.HasOne("SistemaAutoPartesAPI.Models.UnidadesMovile", "Unidad")
                        .WithMany("UsuarioUnidads")
                        .HasForeignKey("UnidadId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioUnidad_Unidad");

                    b.HasOne("SistemaAutoPartesAPI.Models.Usuario", "Usuario")
                        .WithMany("UsuarioUnidads")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioUnidad_Usuario");

                    b.Navigation("Sucursal");

                    b.Navigation("Unidad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Venta", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Cliente", "Cliente")
                        .WithMany("Venta")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Cliente");

                    b.HasOne("SistemaAutoPartesAPI.Models.Sucursale", "Sucursal")
                        .WithMany("Venta")
                        .HasForeignKey("SucursalId")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Sucursal");

                    b.HasOne("SistemaAutoPartesAPI.Models.Usuario", "Usuario")
                        .WithMany("Venta")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Usuario");

                    b.Navigation("Cliente");

                    b.Navigation("Sucursal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UsuarioRol", b =>
                {
                    b.HasOne("SistemaAutoPartesAPI.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Rol");

                    b.HasOne("SistemaAutoPartesAPI.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Usuario");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.AtributosProducto", b =>
                {
                    b.Navigation("ProductoAtributoValors");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.CategoriasProducto", b =>
                {
                    b.Navigation("AtributosProductos");

                    b.Navigation("InverseCategoriaPadre");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Empleado", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Incidencia");

                    b.Navigation("Nominas");

                    b.Navigation("PermisosSalida");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Producto", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("InventarioVendedors");

                    b.Navigation("Inventarios");

                    b.Navigation("MovimientosInventarios");

                    b.Navigation("ProductoAtributoValors");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Sucursale", b =>
                {
                    b.Navigation("Bitacoras");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("InventarioVendedors");

                    b.Navigation("Inventarios");

                    b.Navigation("MovimientosInventarios");

                    b.Navigation("UnidadesMoviles");

                    b.Navigation("UsuarioUnidads");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.UnidadesMovile", b =>
                {
                    b.Navigation("UsuarioUnidads");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Usuario", b =>
                {
                    b.Navigation("Bitacoras");

                    b.Navigation("InventarioVendedors");

                    b.Navigation("UsuarioUnidads");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("SistemaAutoPartesAPI.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
